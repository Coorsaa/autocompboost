% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AutoCompBoostClassif.R
\name{AutoCompBoostClassif}
\alias{AutoCompBoostClassif}
\title{AutoCompBoostClassif}
\arguments{
\item{task}{(\code{\link[mlr3:Task]{Task}}) \cr
\code{\link[mlr3:TaskClassif]{TaskClassif}} to be solved.}

\item{resampling}{(\link[mlr3:Resampling]{Resampling}) \cr
Contains the resampling method to be used for hyper-parameter optimization.
Defaults to \link[mlr3:mlr_resamplings_cv]{ResamplingCV} with 3 folds.}

\item{measure}{(\link[mlr3:Measure]{Measure}) \cr
Contains the performance measure, for which we optimize during training. \cr
Defaults to \link[mlr3measures:acc]{Accuracy} for classification and \link[mlr3measures:rmse]{RMSE} for regression.}

\item{tuning_time}{(\code{integer(1)}) \cr
Termination criterium. Number of seconds for which to run the optimization. Does \emph{not} include training time of the final model. \cr
Default is set to \code{3600}, i.e. one hour. Tuning is terminated depending on the first termination criteria fulfilled.}

\item{tuning_iters}{(\code{integer(1)}) \cr
Termination criterium. Number of MBO iterations for which to run the optimization. \cr
Default is set to \code{150} iterations. Tuning is terminated depending on the first termination criteria fulfilled.}

\item{final_model}{(\code{logical(1)}) \cr
Whether or not to return the final model trained on the whole dataset at the end.}
}
\value{
\link[=AutoCompBoostClassif]{AutoCompBoostClassif}
}
\description{
Class for Automated Classification in autocompboost. Subclass of \link[=AutoCompBoostBase]{AutoCompBoostBase}

Creates a new instance of this \link[R6:R6Class]{R6} class.
}
\section{Construction}{

Objects should be created using the \link[=AutoCompBoost]{AutoCompBoost} interface function.\preformatted{classification_model = AutoCompBoost(classification_task, resampling, measure,
tuning_time, tuning_iters, final_model)
}
}

\examples{
\dontrun{
library(mlr3)
library(autocompboost)

classif_model = AutoCompBoost(tsk("sonar"))
classif_model$train()
}
}
