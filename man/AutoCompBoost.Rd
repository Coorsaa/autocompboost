% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AutoCompBoost.R
\name{AutoCompBoost}
\alias{AutoCompBoost}
\title{Interface function for autocompboost}
\usage{
AutoCompBoost(
  task,
  resampling = NULL,
  param_values = NULL,
  measure = NULL,
  tuning_method = "mbo",
  tuning_time = 60L,
  tuning_iters = 150L,
  final_model = TRUE
)
}
\arguments{
\item{task}{(\code{\link[mlr3:Task]{Task}}) \cr
Contains the task to be solved. Currently \code{\link[mlr3:TaskClassif]{TaskClassif}} and \code{\link[mlr3:TaskRegr]{TaskRegr}} are supported.}

\item{resampling}{(\link[mlr3:Resampling]{Resampling}) \cr
Contains the resampling method to be used for hyper-parameter optimization.
Defaults to \link[mlr3:mlr_resamplings_cv]{ResamplingCV} with 3 folds.}

\item{param_values}{(\code{list()}) \cr
Parameter values which are pass on to the learner.}

\item{measure}{(\link[mlr3:Measure]{Measure}) \cr
Contains the performance measure, for which we optimize during training. \cr
Defaults to \link[mlr3measures:acc]{Accuracy} for classification and \link[mlr3measures:rmse]{RMSE} for regression.}

\item{tuning_method}{(\code{character(1)}) \cr
Tuning method. Possible choices are \code{"mbo"}, \code{"hyperband"} or \code{"smash"}Â¸ Default is \code{"mbo"}.}

\item{tuning_time}{(\code{integer(1)}) \cr
Termination criterium. Number of seconds for which to run the optimization. Does \emph{not} include training time of the final model. \cr
Default is set to \code{60}, i.e. one minute. Tuning is terminated depending on the first termination criteria fulfilled.}

\item{tuning_iters}{(\code{integer(1)}) \cr
Termination criterium. Number of MBO iterations for which to run the optimization. \cr
Default is set to \code{150} iterations. Tuning is terminated depending on the first termination criteria fulfilled.}

\item{final_model}{(\code{logical(1)}) \cr
Whether or not to return the final model trained on the whole dataset at the end.}
}
\value{
(\link[=AutoCompBoostClassif]{AutoCompBoostClassif} | \link[=AutoCompBoostRegr]{AutoCompBoostRegr}) \cr
Returned class depends on the type of task.
}
\description{
Creates an instance of \link[=AutoCompBoostClassif]{AutoCompBoostClassif} or \link[=AutoCompBoostRegr]{AutoCompBoostRegr}.
}
\examples{
\dontrun{
library(mlr3)
library(autocompboost)

model = AutoCompBoost(tsk("sonar"))
model$train()
}
}
